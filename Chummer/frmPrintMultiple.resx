<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIACRAgAAJgAAACAgAAABACAAdgQAALcCAACJUE5HDQoaCgAAAA1JSERSAAAAEAAA
        ABAIBgAAAB/z/2EAAAJYSURBVDiNjZNPb0xhFMZ/573vvUNbStOqLtowY6sWqMZG24UFqbKR+AzEF5C0
        qcQkVhJh6xNIlCaChc7YULpQsVUJiyoStDPm/nnveyxmKh3pwpOczcnJLyfPc47cLF9nsTBGqBlCTp77
        uTTLp5z3oDQlYI0hCoOHQWDOKwGZhJxIKljFcDJ+zssdE4gKqUumHlw7QwxoCyACO4AL5SdTUWBRsZyM
        n+PEYj0GJ5bRpML6rx8sdZ2mASx9agccG4LMw5Fv8+zu3osTi8dgAXIFxZBj1ROgwGB3O0ABT0COVadG
        fKtv8zyfc85NCbCrqxMJQkKg2E2bEkCCkF1dnSRppgpYax/K9PS0zs7OAnD5ylVCG+Ccw+W+DWADg7WW
        zOXcvXMbgJmZGax6z0atzsrKR3p7+ygUIgT5G8CmBFCUJElZfveeYvEg6n3TgygMKZYO0NPTQ6FQQETY
        TqpKkiQUSweIbNjcDBE2Nmq8ev2G5eW3/wWoVg8xOnIcRLAiQq1eI4pCDg8Ps7a2hhizPcB7+vv7iaKQ
        Wr2GbAIajYTQhowcH+HL6iraGm7zwBgE2D8wQJqmNBpJE2CMIcsyOjt2Mj//iO/fvjJ2ahznHNqyUhCs
        tVSqC/T27WNy8hxZlmGMwcZxXJ17cP+UAB0Fw8rQRW5dmuBzrf2QBrvg3sc+hvwLnj55jAJxHFcBSsDR
        zTp745k6Va2raq1VdVV1qnr2xjPdOguUpFwuAxDgWIzGSNfXFkzUMZb/842BMfj0dyXa3T9+Iq2QNy+A
        7fIqAXu2jQF+Ah+2Nv4AhbwRCirsIMsAAAAASUVORK5CYIKJUE5HDQoaCgAAAA1JSERSAAAAIAAAACAI
        BgAAAHN6evQAAAQ9SURBVFiFrZfdaxRXFMB/987nJlmN0frRimgfakpbCNQGQQr9INCQWsSX9q2PRfof
        WDEbbAu+txVL+w9YEB+aRgi1aEmfhbZULBI/QkUx64oPuzM7954+3Jk1idnN7uqBYZm9M+f8zrnnnDlX
        0V78o1//fCE1aspYC9LhyfVEgac1oSez549/eATIetRA+fCpWXlWOXxqVoByWy87AMSZtQDMLYJyTnUl
        kl+T+yDXEQOPewVQkoe95IGnegMw+bu5jravdgJoyUAAukcA22XOdAVQCvrbgmcGEOVMxp677wVgrY6+
        ACzOcqmrOHXW0U50m//DmZMn7knucymA2O/tKgVOkaCYOXniHhCuZ6idb4PLy1XY6fgGgu6TquVZEXmt
        Wb5fBRgE0vUA/EqlcsFaO2Xzuvc9TeRrrnkOutQ5ip1BvJBdO7dTmT5ZzYzNmTRa69lKpXLEB0rW2qmZ
        mZlVLx479jmj/nk++fgbjJU+W7FidPuL3Moyzpz5dtXy9PT0FHl6xSKWJE25du06SiniOKa8aTNRFLF5
        ZGvf3gOICEmScP3fGzQaDUSE0dFXEHEd0nesilrtEc1mE6UUSinK5TJhGKJ1uzztTqy1hGFIkiQ0m01E
        hFrtEXlRq1YSPniwTJKkuLIVNg8PE4YhaoM63khEhDRNSdOEJEkRcbYKaQHs3v0SO3a8gFKKKIo5d+4n
        oih6LgBJkrB//6ckiduCIHhSkS0AYwyXr/yB1pooCqlWq0RR9Fy2IEkSrvy+QJKkWGt595231wHIDKVS
        jNYa3w94dXSU/+7exfO8fLd6tJwXjjGGl/ftIwydM9ZaTGZWAygFWZYRhkFRo4wfPMjVq1dZWlrqOwrW
        Wvbu2cPY2BhZlqF1gLWWLMsodjaPgMIYQxg8STqF4sCbBxh/a7zvPBAR57ExeNrD0x4igjGGIqStLbDi
        yqUwrj2N5/n4nofSfQJYITMGYzKssUjezazrASsBBGvBD9yt1powDJmbm+Pvv/5EKQ1IMd1sKCpPGhHL
        a6+/weTkJGnqEhDA/chKAIVSEEURAEHg8+v8PHcWbzA0MICxwvDISOHXRuYBqFWreFpxZ/EGl3+7xPsT
        EzSb2SrAFoDzOGJoUFAKAt9n6dZN/tl1lPkv3uvO7TYy8dUlBm9dpDw4RDPLEKFVEQWA1Ov1he/Pfneo
        CJGnFZuGYjCO+OLN/kayD/YCJmPTUMyPP5x1H7Xc4Xq9vgCIDzROnz79GbCN1fNBMDEzNwewNep/JlRY
        jk+fmgSaKx7JgAdAwwfqwG3g/hobWxQuIsNxX32oBQAsAg/XLDeAup/TPGadg4PO1Wwpufm+lwgUrSPX
        8RDn4FPScdz08/rfFndpuYOOtusd1kQatYWPvvzlUHFE6924Rhq1BTrUbie8MrCHp5OzFymS7TZtzoad
        AHyghDtY9jsUtJKNNsfz/wH8qO+ZcOp9xgAAAABJRU5ErkJggg==
</value>
  </data>
</root>