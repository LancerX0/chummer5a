<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SaveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>